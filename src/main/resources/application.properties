server.port=8081
spring.redis.database=0
spring.redis.host=redis.catpaw.local
spring.redis.port=6379
spring.redis.password=
spring.redis.jedis.pool.max-active=8
spring.redis.jedis.pool.max-wait=1
spring.redis.jedis.pool.min-idle=0
spring.redis.jedis.pool.max-idle=8
spring.redis.timeout=0
#---------------------------------------------------------
spring.application.name=springboot-rabbitmq
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
#映射到dao层(即mapper生成的位置)
#mybatis.type-aliases-package=com.abc.dao
#mybatis.config-location=classpath:mybatis-config.xml
#mapper.xml文件生成位置
#mybatis.mapper-locations=classpath:mapper/*.xml
sharding.jdbc.datasource.names=mads0,mads1
sharding.jdbc.datasource.mads0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.mads0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.mads0.url=jdbc:mysql://192.168.56.103:3306/chacha?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
sharding.jdbc.datasource.mads0.username=root
sharding.jdbc.datasource.mads0.password=123456
sharding.jdbc.datasource.mads1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.mads1.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.mads1.url=jdbc:mysql://192.168.56.103:3306/chacha?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
sharding.jdbc.datasource.mads1.username=root
sharding.jdbc.datasource.mads1.password=123456
##分库的列，下面的配置都是 2个数据库，每个库3个表进行分库分表
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id
#分库的算法，这里是两个数据库取模，
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=mads$->{id % 2}
#逻辑表对应的真实表
sharding.jdbc.config.sharding.tables.user.actual-data-nodes=mads$->{0..1}.user$->{0..3}
#分表的列
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.sharding-column=id
#分表的算法，这里是三个表取模
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.algorithm-expression=user$->{id % 3}
#自动主键列 采用雪花算法Twitter-Snowflake。
sharding.jdbc.config.sharding.tables.user.key-generator-column-name=id
#sharding.jdbc.config.sharding.master-slave-rules.ds_0.master-data-source-name=ds-master-0
##sharding.jdbc.config.sharding.master-slave-rules.ds_0.slave-data-source-names=ds-master-0-slave-0, ds-master-0-slave-1
#sharding.jdbc.config.sharding.master-slave-rules.ds_1.master-data-source-name=ds-master-1
#sharding.jdbc.config.sharding.master-slave-rules.ds_1.slave-data-source-names=ds-master-1-slave-0, ds-master-1-slave-1
# zk注册中心，E-JOB分布式任务管理器  用的
elastic.job.zk.serverLists=127.0.0.1:2181
elastic.job.zk.namespace=enjoy_elastic7









